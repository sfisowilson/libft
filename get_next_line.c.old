#include "get_next_line.h"
#include <stdlib.h>
#include <unistd.h>
#include <fcntl.h>
#include <stdio.h>

static t_list	*checkfile(t_list **file, int fd)
{
	t_list *temp;
	
	temp = *file;
	while (temp)
	{
		if ((int)temp->content_size == fd)
			return (temp);
		temp = temp->next;
	}
	temp = ft_lstnew("\0", fd);
	ft_lstadd(file, temp);
	return (temp);
}

static int	reading(int fd, char *buf, t_list **node)
{
	int ret;

	while ((ret = read(fd, buf, BUFF_SIZE)) > 0)
	{
		buf[ret] = '\0';
		(*node)->content = ft_strjoin((*node)->content, buf);
		if (ft_strchr(buf, '\n'))
			break ;
	}
	return (ret);
}

static int	setlineFixcontent(char **line, t_list **node)
{
	int i;
	unsigned char *temp;

	temp = (unsigned char*)(*node)->content;
	i = 0;
	while ((temp[i] != '\n') && (temp[i] != '\0'))
	{
		(*line)[i] = temp[i];
		i++;
	}
	(*line)[i] = '\0';
	if (temp[i] == '\0')
		return (0);
	else
	{
		(*node)->content = (*node)->content + i + 1;
		return (1);
	}
}

int	get_next_line(int fd, char **line)
{
	t_list		*node;
	static t_list	*file;
	int 		ret;
	char buf[BUFF_SIZE + 1];

	node = checkfile(&file, fd);
	*line = ft_strnew(1);
	if ((fd < 0) || !(*line))
		return -1;
	ret = reading(fd, buf, &node);
	if (!(ret > 0) && (ft_strlen(node->content) == 0))
		return (0);
	if (setlineFixcontent(line, &node))
	{
		if ((ret = reading(fd, buf, &node) != BUFF_SIZE) &&\
		ft_strlen(node->content) == 0)
			return (0);
		return (1);
	}
	return (0);
}
